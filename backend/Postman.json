{
	"info": {
		"_postman_id": "69af8298-37cb-4fd3-b16d-d27dd8885020",
		"name": "PropXdoesWHAT API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "823fb35a-a686-42d1-a678-4bf8cbc77528",
			"name": "Politicians Results",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11ea0292-d322-4f2f-ab7c-57b968c3df5a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Total number of results is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"num_results\");",
							"});",
							"",
							"pm.test(\"Bio ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"bio_id\");",
							"});",
							"",
							"pm.test(\"Chamber is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"chamber\");",
							"});",
							"",
							"pm.test(\"Contact form is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"contact_form\");",
							"});",
							"",
							"pm.test(\"Date of Birth is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"dob\");",
							"});",
							"",
							"pm.test(\"ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"First name is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"first_name\");",
							"});",
							"",
							"pm.test(\"Last name is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"last_name\");",
							"});",
							"",
							"pm.test(\"Law is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"law\");",
							"});",
							"",
							"pm.test(\"Party is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"party\");",
							"});",
							"",
							"pm.test(\"Phone is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phone\");",
							"});",
							"",
							"pm.test(\"Site is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"site\");",
							"});",
							"",
							"pm.test(\"State is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"state\");",
							"});",
							"",
							"pm.test(\"The page number is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"page\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
							"});",
							"",
							"pm.test(\"Total number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(554);",
							"});",
							"",
							"pm.test(\"Page number is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.page).to.eql(1);",
							"});",
							"",
							"pm.test(\"Total number of pages is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total_pages).to.eql(47);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/politicians",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"politicians"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "a00af8b1-7a09-40d5-ad58-3c3186ac2bff",
			"name": "Laws Results",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "844d3142-c709-4b58-8aa9-0773d3b5cedb",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Total number of results is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"num_results\");",
							"});",
							"",
							"pm.test(\"Bill ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"bill_id\");",
							"});",
							"",
							"pm.test(\"Cdotgove URL is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"cdotgov_url\");",
							"});",
							"",
							"pm.test(\"Description is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"desc\");",
							"});",
							"",
							"pm.test(\"Enacted is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"enacted\");",
							"});",
							"",
							"pm.test(\"Govtrack URL is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"govtrack_url\");",
							"});",
							"",
							"pm.test(\"House pass is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"house_pass\");",
							"});",
							"",
							"pm.test(\"ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Introduced date is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"introduced\");",
							"});",
							"",
							"pm.test(\"State is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"state\");",
							"});",
							"",
							"pm.test(\"Name is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});",
							"",
							"pm.test(\"Sponsor is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"sponsor\");",
							"});",
							"",
							"pm.test(\"Sponsor bio ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"sponsor_bio_id\");",
							"});",
							"",
							"pm.test(\"Sponsor ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"sponsor_id\");",
							"});",
							"",
							"pm.test(\"Subject is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"subject\");",
							"});",
							"",
							"pm.test(\"Title is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"title\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
							"});",
							"",
							"pm.test(\"Total number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(3381);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/laws",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"laws"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "ae3c91f5-237a-46b7-a32d-f7369c8e842e",
			"name": "Action Groups Results",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "084c3faa-1926-40a6-8bbc-b1e1aa30cf6d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Total number of results is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"num_results\");",
							"});",
							"",
							"pm.test(\"Description is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"desc\");",
							"});",
							"",
							"pm.test(\"ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Description is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});",
							"",
							"pm.test(\"Type is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"type\");",
							"});",
							"",
							"pm.test(\"URL is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"url\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"page\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
							"});",
							"",
							"pm.test(\"Total number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(515);",
							"});",
							"",
							"pm.test(\"Page number is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.page).to.eql(1);",
							"});",
							"",
							"pm.test(\"Total number of pages is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total_pages).to.eql(43);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/action_groups",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"action_groups"
					]
				}
			},
			"response": []
		},
		{
			"_postman_id": "1fce0bb7-c5ec-4a32-80b1-ab1e2d6a65ad",
			"name": "Politicians Multiple Filters",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bce4bab2-f6c1-44cb-8933-e34f4d4c2f51",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(11);",
							"});",
							"",
							"pm.test(\"Has Castro\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Castro\");",
							"});",
							"",
							"pm.test(\"Has Veasey\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Veasey\");",
							"});",
							"",
							"pm.test(\"Has Filemon Vela's laws\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"hr4940-115\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/politicians?page=1&q={\"filters\":[{\"and\":[{\"or\":[{\"name\":\"party\",\"op\":\"eq\",\"val\":\"D\"}]},{\"or\":[{\"name\":\"state\",\"op\":\"eq\",\"val\":\"TX\"}]},{\"or\":[{\"name\":\"chamber\",\"op\":\"eq\",\"val\":\"house\"}]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"politicians"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"or\":[{\"name\":\"party\",\"op\":\"eq\",\"val\":\"D\"}]},{\"or\":[{\"name\":\"state\",\"op\":\"eq\",\"val\":\"TX\"}]},{\"or\":[{\"name\":\"chamber\",\"op\":\"eq\",\"val\":\"house\"}]}]}],\"order_by\":[]}"
						}
					]
				},
				"description": "Politician Filter Test"
			},
			"response": []
		},
		{
			"_postman_id": "29bad442-699d-452f-852a-ee07f55e4923",
			"name": "Politicians Filter and Sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ee8bb018-18f8-4715-8cf9-be9a6413aba3",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(8);",
							"});",
							"",
							"pm.test(\"First politician sorted is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].last_name).to.eql(\"Cassidy\");",
							"});",
							"",
							"pm.test(\"Last politician sorted is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[7].last_name).to.eql(\"Scalise\");",
							"});",
							"",
							"pm.test(\"Sort works with filter\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[3].state).to.eql(\"LA\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/politicians?page=1&q={\"filters\":[{\"and\":[{\"or\":[]},{\"or\":[{\"name\":\"state\",\"op\":\"eq\",\"val\":\"LA\"}]},{\"or\":[]}]}],\"order_by\":[{\"field\":\"first_name\",\"direction\":\"asc\"}]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"politicians"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"filters\":[{\"and\":[{\"or\":[]},{\"or\":[{\"name\":\"state\",\"op\":\"eq\",\"val\":\"LA\"}]},{\"or\":[]}]}],\"order_by\":[{\"field\":\"first_name\",\"direction\":\"asc\"}]}"
						}
					]
				},
				"description": "Politician Sort Test"
			},
			"response": []
		},
		{
			"_postman_id": "bfcaf2bf-6706-488e-933d-fb48ef6e94ee",
			"name": "Politicians Search and Filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "585c5a2c-7d68-4bd1-989c-ae31554c6f46",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(2);",
							"});",
							"",
							"pm.test(\"Relevance search test 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].last_name).to.eql(\"Cruz\");",
							"});",
							"",
							"pm.test(\"Relevance search test 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].last_name).to.eql(\"Poe\");",
							"});",
							"",
							"pm.test(\"Search works with filter\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].state).to.eql(\"TX\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/politicians?page=1&q={\"search\":\"Ted Cruz\",\"filters\":[{\"and\":[{\"or\":[]},{\"or\":[{\"name\":\"state\",\"op\":\"eq\",\"val\":\"TX\"}]},{\"or\":[]}]}]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"politicians"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"search\":\"Ted Cruz\",\"filters\":[{\"and\":[{\"or\":[]},{\"or\":[{\"name\":\"state\",\"op\":\"eq\",\"val\":\"TX\"}]},{\"or\":[]}]}]}"
						}
					]
				},
				"description": "Politician Search Test"
			},
			"response": []
		},
		{
			"_postman_id": "44e4f41d-699e-441c-bdd9-83c9f6d87c25",
			"name": "Laws Search and Filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fbbefac3-599f-46b8-b710-580b34fa895c",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(23);",
							"});",
							"",
							"pm.test(\"Relevance search test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].bill_id).to.eql(\"s2349-115\");",
							"});",
							"",
							"pm.test(\"Search works with filter 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[4].subject).to.eql(\"Crime and Law Enforcement\");",
							"});",
							"",
							"pm.test(\"Search works with filter 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[7].subject).to.eql(\"Crime and Law Enforcement\");",
							"});",
							"",
							"pm.test(\"Search works with filter 3\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[11].subject).to.eql(\"Crime and Law Enforcement\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/laws?page=1&q={\"search\":\"gun violence awareness\",\"filters\":[{\"and\":[{\"or\":[{\"name\":\"subject\",\"op\":\"eq\",\"val\":\"Crime and Law Enforcement\"}]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"laws"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"search\":\"gun violence awareness\",\"filters\":[{\"and\":[{\"or\":[{\"name\":\"subject\",\"op\":\"eq\",\"val\":\"Crime and Law Enforcement\"}]}]}],\"order_by\":[]}"
						}
					]
				},
				"description": "Law Search Test"
			},
			"response": []
		},
		{
			"_postman_id": "36e7ac01-e719-427c-af9b-6325c72e20c3",
			"name": "Laws Filter and Sort",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f9f5feb-2123-49e5-b819-38191ea38091",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(7);",
							"});",
							"",
							"pm.test(\"Sort desc test 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].introduced).to.eql(\"2018-04-12\");",
							"});",
							"",
							"pm.test(\"Sort desc test 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[1].introduced).to.eql(\"2018-02-13\");",
							"});",
							"",
							"pm.test(\"Filter works with filter test 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].subject).to.eql(\"Agriculture and Food\");",
							"});",
							"",
							"pm.test(\"Filter works with filter test 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[4].subject).to.eql(\"Agriculture and Food\");",
							"});",
							"",
							"pm.test(\"Filter works with filter test 3\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[5].subject).to.eql(\"Agriculture and Food\");",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/laws?page=1&q={\"search\":\"food\",\"filters\":[{\"and\":[{\"or\":[{\"name\":\"subject\",\"op\":\"eq\",\"val\":\"Agriculture and Food\"}]}]}],\"order_by\":[{\"field\":\"introduced\",\"direction\":\"desc\"}]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"laws"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"search\":\"food\",\"filters\":[{\"and\":[{\"or\":[{\"name\":\"subject\",\"op\":\"eq\",\"val\":\"Agriculture and Food\"}]}]}],\"order_by\":[{\"field\":\"introduced\",\"direction\":\"desc\"}]}"
						}
					]
				},
				"description": "Law Filter and Sort Test"
			},
			"response": []
		},
		{
			"_postman_id": "d1fb5677-3cd3-4fb0-a4c0-65f705237a47",
			"name": "Action Groups Search",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7480c348-46e0-4902-bb43-85889caffa19",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(46);",
							"});",
							"",
							"pm.test(\"Relevance search test\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].id).to.eql(3);",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/action_groups?page=1&q={\"search\":\"United\",\"filters\":[{\"and\":[{\"or\":[]}]}],\"order_by\":[]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"action_groups"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"search\":\"United\",\"filters\":[{\"and\":[{\"or\":[]}]}],\"order_by\":[]}"
						}
					]
				},
				"description": "Action Group Search Test"
			},
			"response": []
		},
		{
			"_postman_id": "c92f2ebe-150d-4864-ba27-be6814ddeccb",
			"name": "Action Groups Multiple Filters",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b459d0d9-087a-46f8-a7ec-10b3be460d38",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(3);",
							"});",
							"",
							"pm.test(\"Filter multiple test 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[0].type).to.eql(\"Civic and Neighborhood Groups\");",
							"});",
							"",
							"pm.test(\"Filter multiple test 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.objects[2].type).to.eql(\"Simple Living Advocacy Groups\");",
							"});",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/action_groups?page=1&q={\"search\":\"civic simple\",\"filters\":[{\"and\":[{\"or\":[{\"name\":\"type\",\"op\":\"eq\",\"val\":\"Simple Living Advocacy Groups\"},{\"name\":\"type\",\"op\":\"eq\",\"val\":\"Civic and Neighborhood Groups\"}]}]}]}",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"action_groups"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						},
						{
							"key": "q",
							"value": "{\"search\":\"civic simple\",\"filters\":[{\"and\":[{\"or\":[{\"name\":\"type\",\"op\":\"eq\",\"val\":\"Simple Living Advocacy Groups\"},{\"name\":\"type\",\"op\":\"eq\",\"val\":\"Civic and Neighborhood Groups\"}]}]}]}"
						}
					]
				},
				"description": "Action Group Filter Multiple Test"
			},
			"response": []
		}
	]
}