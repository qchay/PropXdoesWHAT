{
	"info": {
		"_postman_id": "69af8298-37cb-4fd3-b16d-d27dd8885020",
		"name": "PropXdoesWHAT API Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "http://api.propxdoeswhat.me/api/politicians",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "11ea0292-d322-4f2f-ab7c-57b968c3df5a",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Total number of results is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"num_results\");",
							"});",
							"",
							"pm.test(\"Bio ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"bio_id\");",
							"});",
							"",
							"pm.test(\"Chamber is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"chamber\");",
							"});",
							"",
							"pm.test(\"Contact form is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"contact_form\");",
							"});",
							"",
							"pm.test(\"Date of Birth is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"dob\");",
							"});",
							"",
							"pm.test(\"ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"First name is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"first_name\");",
							"});",
							"",
							"pm.test(\"Last name is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"last_name\");",
							"});",
							"",
							"pm.test(\"Law is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"law\");",
							"});",
							"",
							"pm.test(\"Party is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"party\");",
							"});",
							"",
							"pm.test(\"Phone is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"phone\");",
							"});",
							"",
							"pm.test(\"Site is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"site\");",
							"});",
							"",
							"pm.test(\"State is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"state\");",
							"});",
							"",
							"pm.test(\"The page number is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"page\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
							"});",
							"",
							"pm.test(\"Total number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(554);",
							"});",
							"",
							"pm.test(\"Page number is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.page).to.eql(1);",
							"});",
							"",
							"pm.test(\"Total number of pages is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total_pages).to.eql(47);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/politicians",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"politicians"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://api.propxdoeswhat.me/api/laws",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "844d3142-c709-4b58-8aa9-0773d3b5cedb",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Total number of results is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"num_results\");",
							"});",
							"",
							"pm.test(\"Bill ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"bill_id\");",
							"});",
							"",
							"pm.test(\"Cdotgove URL is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"cdotgov_url\");",
							"});",
							"",
							"pm.test(\"Description is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"desc\");",
							"});",
							"",
							"pm.test(\"Enacted is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"enacted\");",
							"});",
							"",
							"pm.test(\"Govtrack URL is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"govtrack_url\");",
							"});",
							"",
							"pm.test(\"House pass is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"house_pass\");",
							"});",
							"",
							"pm.test(\"ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Introduced date is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"introduced\");",
							"});",
							"",
							"pm.test(\"State is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"state\");",
							"});",
							"",
							"pm.test(\"Name is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});",
							"",
							"pm.test(\"Sponsor is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"sponsor\");",
							"});",
							"",
							"pm.test(\"Sponsor bio ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"sponsor_bio_id\");",
							"});",
							"",
							"pm.test(\"Sponsor ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"sponsor_id\");",
							"});",
							"",
							"pm.test(\"Subject is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"subject\");",
							"});",
							"",
							"pm.test(\"Title is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"title\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
							"});",
							"",
							"pm.test(\"Total number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(3381);",
							"});",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/laws",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"laws"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://api.propxdoeswhat.me/api/action_groups",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "084c3faa-1926-40a6-8bbc-b1e1aa30cf6d",
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response time is less than 1000ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Total number of results is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"num_results\");",
							"});",
							"",
							"pm.test(\"Description is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"desc\");",
							"});",
							"",
							"pm.test(\"ID is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"id\");",
							"});",
							"",
							"pm.test(\"Description is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"name\");",
							"});",
							"",
							"pm.test(\"Type is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"type\");",
							"});",
							"",
							"pm.test(\"URL is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"url\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"page\");",
							"});",
							"",
							"pm.test(\"The total number of pages is present\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"total_pages\");",
							"});",
							"",
							"pm.test(\"Total number of results is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.num_results).to.eql(515);",
							"});",
							"",
							"pm.test(\"Page number is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.page).to.eql(1);",
							"});",
							"",
							"pm.test(\"Total number of pages is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total_pages).to.eql(43);",
							"});"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {},
				"url": {
					"raw": "http://api.propxdoeswhat.me/api/action_groups",
					"protocol": "http",
					"host": [
						"api",
						"propxdoeswhat",
						"me"
					],
					"path": [
						"api",
						"action_groups"
					]
				}
			},
			"response": []
		}
	]
}